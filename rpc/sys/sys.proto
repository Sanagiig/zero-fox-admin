syntax = "proto3";

package sysclient;

option go_package = "./sysclient";

//user start---------------------
message LoginReq {
  string account = 1;
  string password = 2;
  string LoginIp = 3;
}

message loginResp {
  int64 id = 1;
  string userName = 2;
  string AccessToken = 3;
  repeated string ApiUrls = 4;

}

message InfoReq {
  int64 UserId = 1;
}

message InfoResp {
  string avatar = 1;
  string name = 2;
  repeated MenuListTree menuListTree = 3;
  repeated string BackgroundUrls = 4;
}

message UserAddReq {
  string email = 1;
  string mobile = 2;
  string user_name = 3;
  string nick_name = 4;
  string avatar = 5;
  int64 dept_id = 6;
  string create_by = 7;
  int32 user_status = 8;
  int64 job_id = 9;
}

message UserAddResp {
  string pong = 1;
}

message UserListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string user_name = 3;
  string nick_name = 4;
  string mobile = 5;
  string email = 6;
  int32 user_status = 7;
  int64 dept_id = 8;
}

message UserListData{
  int64 id = 1;
  string user_name = 2;
  string nick_name = 3;
  string avatar = 4;
  int64 job_id = 5;
  int32 del_flag = 6;
  string email = 7;
  string mobile = 8;
  int32 user_status = 9;
  int64 dept_id = 10;
  string create_by = 11;
  string create_time = 12;
  string update_by = 13;
  string update_time = 14;
}

message UserListResp {
  int64 total = 1;
  repeated  UserListData list = 2;
}

message UserUpdateReq {
  int64 id = 1;
  string email = 2;
  string mobile = 3;
  string user_name = 4;
  string nick_name = 5;
  string avatar = 6;
  int64 dept_id = 7;
  string update_by = 8;
  int64 job_id = 9;
  int32 user_status = 10;
}

message UserUpdateResp {
  string pong = 1;
}

message UserDeleteReq {
  repeated int64 ids = 1;
}

message UserDeleteResp {
  string pong = 1;
}


message ReSetPasswordReq {
  int64 id = 1;
  string update_by = 2;
}

message ReSetPasswordResp {
  string pong = 1;
}

message UserStatusReq {
  int64 id = 1;
  int32 user_status = 2;
  string update_by = 3;
}

message UserStatusResp {
  string pong = 1;
}

message UpdateUserRoleListReq {
  int64 userId = 1;
  repeated int64 roleIds = 2;
}

message UpdateUserRoleListResp {
  string pong = 1;
}
message QueryUserRoleListReq {
  int64 current = 1;
  int64 pageSize = 2;
  int64 userId = 3;
}

message QueryUserRoleListResp {
  repeated RoleListData list = 1;
  repeated int64 RoleIds = 2;
  int64 total = 3;
}
//user start---------------------
service UserService {

  rpc Login(LoginReq) returns(loginResp);
  rpc UserInfo(InfoReq) returns(InfoResp);
  rpc UserAdd(UserAddReq) returns(UserAddResp);
  rpc UserList(UserListReq) returns(UserListResp);
  rpc UserUpdate(UserUpdateReq) returns(UserUpdateResp);
  rpc UserDelete(UserDeleteReq) returns(UserDeleteResp);
  rpc ReSetPassword(ReSetPasswordReq) returns(ReSetPasswordResp);
  rpc UpdateUserStatus(UserStatusReq) returns(UserStatusResp);

  //查询用户与角色的关联
  rpc QueryUserRoleList(QueryUserRoleListReq) returns(QueryUserRoleListResp);
  //更新用户与角色的关联
  rpc UpdateUserRoleList(UpdateUserRoleListReq) returns(UpdateUserRoleListResp);

}

//role start---------------------
message RoleAddReq {
  string name = 1;
  string remark = 2;
  string create_by = 3;
  int32 status = 5;
}

message RoleAddResp {
  string pong = 1;
}

message RoleListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string name = 3;
  int32 status = 4;
}

message RoleListData {
  int64 id = 1;
  string name = 2;
  string remark = 3;
  string create_by = 4;
  string create_time = 5;
  string update_by = 6;
  string update_time = 7;
  int32 del_flag = 8;
  int32 status = 9;
}

message RoleListResp {
  int64 total = 1;
  repeated  RoleListData list = 2;
}

message RoleUpdateReq {
  int64 id = 1;
  string name = 2;
  string remark = 3;
  string update_by = 4;
  int32 status = 5;
}

message RoleUpdateResp {
  string pong = 1;
}

message RoleDeleteReq {
  repeated int64 ids = 1;
}

message RoleDeleteResp {
  string pong = 1;
}


message QueryRoleMenuListReq {
  int64 RoleId = 1;
}

message QueryRoleMenuListResp {
  repeated MenuListData list = 1;
  repeated int64 MenuIds = 2;
}

//role end---------------------
service RoleService {

  //添加角色
  rpc RoleAdd(RoleAddReq) returns(RoleAddResp);
  //查询角色
  rpc RoleList(RoleListReq) returns(RoleListResp);
  //更新角色
  rpc RoleUpdate(RoleUpdateReq) returns(RoleUpdateResp);
  //删除角色
  rpc RoleDelete(RoleDeleteReq) returns(RoleDeleteResp);

  //查询用户与角色的关联
  rpc QueryRoleMenuList(QueryRoleMenuListReq) returns(QueryRoleMenuListResp);
  //更新用户与角色的关联
  rpc UpdateMenuRoleList(UpdateMenuRoleReq) returns(UpdateMenuRoleResp);

}

//menu start---------------------
message MenuAddReq {
  string name = 1;
  int64 parent_id = 2;
  string url = 3;
  string perms = 4;
  int32 type = 5;
  string icon = 6;
  int32 order_num = 7;
  string create_by = 8;
  string vuePath = 9;
  string vueComponent = 10;
  string vueIcon = 11;
  string vueRedirect = 12;
  int32 del_flag = 13;
  string background_url = 14;
}

message MenuAddResp {
  string pong = 1;
}

message MenuListReq {
  //  int64 current = 1;
  //  int64 pageSize = 2;
  string name = 1;
  string url = 2;
}

message MenuListData {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  string url = 4;
  string perms = 5;
  int32 type = 6;
  string icon = 7;
  int32 order_num = 8;
  string create_by = 10;
  string create_time = 11;
  string update_by = 12;
  string update_time = 13;
  int32 del_flag = 14;
  string vuePath = 15;
  string vueComponent = 16;
  string vueIcon = 17;
  string vueRedirect = 18;
  string background_url = 19;
}

message MenuListTree {
  int64 id = 1;
  string name = 2;
  string icon = 3;
  int64 parent_id = 4;
  string path = 5;
  string vue_path = 6;
  string vue_component = 7;
  string vue_icon = 8;
  string vue_redirect = 9;
}

message MenuListResp{
  int64 total = 1;
  repeated  MenuListData list = 2;
}
message MenuUpdateReq {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  string url = 4;
  string perms = 5;
  int32 type = 6;
  string icon = 7;
  int32 order_num = 8;
  string update_by = 9;
  string vuePath = 10;
  string vueComponent = 11;
  string vueIcon = 12;
  string vueRedirect = 13;
  int32 del_flag = 14;
  string background_url = 15;

}

message MenuUpdateResp {
  string pong = 1;
}

message MenuDeleteReq {
  repeated int64 ids = 1;
}

message MenuDeleteResp {
  string pong = 1;
}

message UpdateMenuRoleReq {
  int64 roleId = 1;
  repeated int64 menuIds = 2;
}

message UpdateMenuRoleResp {
  string pong = 1;
}
//menu end---------------------
service MenuService {

  rpc MenuAdd(MenuAddReq) returns(MenuAddResp);
  rpc MenuList(MenuListReq) returns(MenuListResp);
  rpc MenuUpdate(MenuUpdateReq) returns(MenuUpdateResp);
  rpc MenuDelete(MenuDeleteReq) returns(MenuDeleteResp);

}

//dict start---------------------
// 添加字典表
message DictAddReq {
  string CreateBy = 1; //创建者
  string DictName = 2; //字典名称
  int32 DictStatus = 3; //字典状态
  string DictType = 4; //字典类型
  string Remark = 5; //备注信息

}

message DictAddResp {
  string pong = 1;
}

// 删除字典表
message DictDeleteReq {
  repeated int64 ids = 1;
}

message DictDeleteResp {
  string pong = 1;
}

// 更新字典表
message DictUpdateReq {
  string dictName = 1; //字典名称
  int32 dictStatus = 2; //字典状态
  string dictType = 3; //字典类型
  int64 id = 4; //编号
  string remark = 5; //备注信息
  string updateBy = 6; //更新者

}

message DictUpdateResp {
  string pong = 1;
}

// 查询单条字典表记录
message DictReq {
  int64 id = 1; //编号

}

message DictResp {
  string createBy = 1; //创建者
  string createTime = 2; //创建时间
  int32 delFlag = 3; //是否删除  1：已删除  0：正常
  string dictName = 4; //字典名称
  int32 dictStatus = 5; //字典状态
  string dictType = 6; //字典类型
  int64 id = 7; //编号
  int32 isSystem = 8; //是否系统预留  0：否  1：是
  string remark = 9; //备注信息
  string updateBy = 10; //更新者
  string updateTime = 11; //更新时间

}

// 分页查询字典表列表
message DictListReq {
  int64 current = 1;
  int64 pageSize = 2;
  int32 isSystem = 3; //是否系统预留  0：否  1：是
  string dictName = 4; //字典名称
  int32 dictStatus = 5; //字典状态
  string dictType = 6; //字典类型

}

message DictListData {
  string createBy = 1; //创建者
  string createTime = 2; //创建时间
  int32 delFlag = 3; //是否删除  1：已删除  0：正常
  string dictName = 4; //字典名称
  int32 dictStatus = 5; //字典状态
  string dictType = 6; //字典类型
  int64 id = 7; //编号
  int32 isSystem = 8; //是否系统预留  0：否  1：是
  string remark = 9; //备注信息
  string updateBy = 10; //更新者
  string updateTime = 11; //更新时间

}

message DictListResp {
  int64 total = 1;
  repeated  DictListData list = 2;
}

// 字典表
service DictService {
  // 添加字典表
  rpc AddDict(DictAddReq) returns (DictAddResp){}
  // 删除字典表
  rpc DeleteDict(DictDeleteReq) returns (DictDeleteResp){}
  // 更新字典表
  rpc UpdateDict(DictUpdateReq) returns (DictUpdateResp ){}
  // 根据条件查询单条字典表记录
  rpc QueryDict(DictReq) returns (DictResp){}
  // 查询字典表列表
  rpc QueryDictList(DictListReq) returns (DictListResp){}

}

// 添加字典项表
message DictItemAddReq {
  string createBy = 1; //创建者
  string Remark = 2; //备注信息
  int32 IsDefault = 3; //是否默认  0：否  1：是
  string DictLabel = 4; //字典标签
  int32 DictSort = 5; //排序
  int32 DictStatus = 6; //字典状态
  string DictType = 7; //字典类型
  string DictValue = 8; //字典键值


}

message DictItemAddResp {
  string pong = 1;
}

// 删除字典项表
message DictItemDeleteReq {
  repeated int64 ids = 1;
}

message DictItemDeleteResp {
  string pong = 1;
}

// 更新字典项表
message DictItemUpdateReq {
  string updateBy = 1; //创建者
  string remark = 2; //备注信息
  int32 delFlag = 3; //是否删除  1：已删除  0：正常
  string dictLabel = 4; //字典标签
  int32 dictSort = 5; //排序
  int32 dictStatus = 6; //字典状态
  string dictType = 7; //字典类型
  string dictValue = 8; //字典键值
  int64 id = 9; //编号
  int32 isDefault = 10; //是否默认  0：否  1：是

}

message DictItemUpdateResp {
  string pong = 1;
}

// 查询单条字典项表记录
message DictItemReq {
  int64 id = 1; //编号

}

message DictItemResp {
  string createBy = 1; //创建者
  string createTime = 2; //创建时间
  int32 delFlag = 3; //是否删除  1：已删除  0：正常
  string dictLabel = 4; //字典标签
  int32 dictSort = 5; //排序
  int32 dictStatus = 6; //字典状态
  string dictType = 7; //字典类型
  string dictValue = 8; //字典键值
  int64 id = 9; //编号
  int32 isDefault = 10; //是否默认  0：否  1：是
  string remark = 11; //备注信息
  string updateBy = 12; //更新者
  string updateTime = 13; //更新时间

}

// 分页查询字典项表列表
message DictItemListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string dictType = 3; //字典类型
  string dictLabel = 4; //字典标签
  int32 dictStatus = 6; //字典状态


}

message DictItemListData {
  string createBy = 1; //创建者
  string createTime = 2; //创建时间
  int32 delFlag = 3; //是否删除  1：已删除  0：正常
  string dictLabel = 4; //字典标签
  int32 dictSort = 5; //排序
  int32 dictStatus = 6; //字典状态
  string dictType = 7; //字典类型
  string dictValue = 8; //字典键值
  int64 id = 9; //编号
  int32 isDefault = 10; //是否默认  0：否  1：是
  string remark = 11; //备注信息
  string updateBy = 12; //更新者
  string updateTime = 13; //更新时间

}

message DictItemListResp {
  int64 total = 1;
  repeated  DictItemListData list = 2;
}

// 字典项表
service DictItemService {
  // 添加字典项表
  rpc AddDictItem(DictItemAddReq) returns (DictItemAddResp){}
  // 删除字典项表
  rpc DeleteDictItem(DictItemDeleteReq) returns (DictItemDeleteResp){}
  // 更新字典项表
  rpc UpdateDictItem(DictItemUpdateReq) returns (DictItemUpdateResp ){}
  // 根据条件查询单条字典项表记录
  rpc QueryDictItem(DictItemReq) returns (DictItemResp){}
  // 查询字典项表列表
  rpc QueryDictItemList(DictItemListReq) returns (DictItemListResp){}

}


//dept start---------------------
message DeptAddReq {
  string DeptName = 1;
  int64 parent_id = 2;
  int32 order_num = 3;
  string create_by = 4;
  repeated int64 parent_ids = 5;
}

message DeptAddResp {
  string pong = 1;
}

message DeptListReq {
  string DeptName = 1;
}

message DeptListData {
  int64 id = 1;
  string DeptName = 2;
  int64 parent_id = 3;
  int32 order_num = 4;
  string create_by = 5;
  string create_time = 6;
  string update_by = 7;
  string update_time = 8;
  int32 del_flag = 9;
  repeated int64 parent_ids = 10;
}

message DeptListResp{
  repeated  DeptListData list = 1;
}
message DeptUpdateReq {
  int64 id = 1;
  string DeptName = 2;
  int64 parent_id = 3;
  int32 order_num = 4;
  string update_by = 7;
  repeated int64 parent_ids = 8;
  int32 del_flag = 9;
}

message DeptUpdateResp {
  string pong = 1;
}

message DeptDeleteReq {
  repeated int64 ids = 1;
}

message DeptDeleteResp {
  string pong = 1;
}
//dept end---------------------
service DeptService {

  rpc DeptAdd(DeptAddReq) returns(DeptAddResp);
  rpc DeptList(DeptListReq) returns(DeptListResp);
  rpc DeptUpdate(DeptUpdateReq) returns(DeptUpdateResp);
  rpc DeptDelete(DeptDeleteReq) returns(DeptDeleteResp);

}

//loginLog start---------------------
message LoginLogAddReq {
  string user_name = 1;
  string status = 2;
  string ip = 3;
  string create_by = 4;
}

message LoginLogAddResp {
  string pong = 1;
}

message LoginLogListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string user_name = 3;
  string ip = 4;
}

message LoginLogListData {
  int64 id = 1;
  string user_name = 2;
  string status = 3;
  string ip = 4;
  string create_by = 5;
  string create_time = 6;
  string update_by = 7;
  string update_time = 8;
}

message LoginLogListResp{
  int64 total = 1;
  repeated  LoginLogListData list = 2;
}
message LoginLogDeleteReq {
  repeated int64 ids = 1;
}

message LoginLogDeleteResp {
  string pong = 1;
}

message StatisticsLoginLogReq {
  string status = 1;
}

message StatisticsLoginLogResp {
  //查询当天登录人数（根据IP）
  int32 current_day_login_count = 1;
  //统计当前周登录人数（根据IP）
  int32 current_week_login_count = 2;
  //统计当前月登录人数（根据IP）
  int32 current_month_login_count = 3;
}

//loginLog end---------------------
service LoginLogService {

  rpc LoginLogAdd(LoginLogAddReq) returns(LoginLogAddResp);
  rpc LoginLogList(LoginLogListReq) returns(LoginLogListResp);
  rpc LoginLogDelete(LoginLogDeleteReq) returns(LoginLogDeleteResp);
  // 统计后台用户登录---(查询当天登录人数（根据IP,统计当前周登录人数（根据IP）,统计当前月登录人数（根据IP）)
  rpc StatisticsLoginLog(StatisticsLoginLogReq) returns(StatisticsLoginLogResp);

}

//sysLog start---------------------
message SysLogAddReq {
  string user_name = 1;
  string operation = 2;
  string method = 3;
  string request_params = 4;
  int64 time = 5;
  string ip = 6;
  string response_params = 7;
}

message SysLogAddResp {
  string pong = 1;
}

message SysLogListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string user_name = 3;
  string method = 4;
}

message SysLogListData {
  int64 id = 1;
  string user_name = 2;
  string operation = 3;
  string method = 4;
  string request_params = 5;
  int64 time = 6;
  string ip = 7;
  string response_params = 8;
  string operation_time = 9;
}

message SysLogListResp{
  int64 total = 1;
  repeated  SysLogListData list = 2;
}
message SysLogDeleteReq {
  repeated int64 ids = 1;
}

message SysLogDeleteResp {
  string pong = 1;
}
//sysLog end---------------------
service SysLogService {

  rpc SysLogAdd(SysLogAddReq) returns(SysLogAddResp);
  rpc SysLogList(SysLogListReq) returns(SysLogListResp);
  rpc SysLogDelete(SysLogDeleteReq) returns(SysLogDeleteResp);

}

//job start---------------------
message JobAddReq {
  string jobName = 1;
  int32 orderNum = 2;
  string create_by = 3;
  string remarks = 4;
  int32 delFlag = 5;
}

message JobAddResp {
  string pong = 1;
}

message JobListReq {
  int64 current = 1;
  int64 pageSize = 2;
  string jobName = 3;
  int32 delFlag = 4;
}

message JobListData {
  int64 id = 1;
  string jobName = 2;
  int32 orderNum = 3;
  string createBy = 4;
  string createTime = 5;
  string UpdateBy = 6;
  string UpdateTime = 7;
  int32 delFlag = 8;
  string remarks = 9;
}

message JobListResp{
  int64 total = 1;
  repeated  JobListData list = 2;
}

message JobUpdateReq {
  int64 id = 1;
  string jobName = 2;
  int32 orderNum = 3;
  string UpdateBy = 4;
  string remarks = 5;
  int32 delFlag = 6;
}

message JobUpdateResp {
  string pong = 1;
}

message JobDeleteReq {
  repeated int64 ids = 1;
}

message JobDeleteResp {
  string pong = 1;
}
//job end---------------------

service JobService {

  rpc JobAdd(JobAddReq) returns(JobAddResp);
  rpc JobList(JobListReq) returns(JobListResp);
  rpc JobUpdate(JobUpdateReq) returns(JobUpdateResp);
  rpc JobDelete(JobDeleteReq) returns(JobDeleteResp);
}



