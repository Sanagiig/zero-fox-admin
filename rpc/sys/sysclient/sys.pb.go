// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: rpc/sys/sys.proto

package sysclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// user start---------------------
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	LoginIp  string `protobuf:"bytes,3,opt,name=LoginIp,proto3" json:"LoginIp,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName    string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	AccessToken string   `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ApiUrls     []string `protobuf:"bytes,4,rep,name=ApiUrls,proto3" json:"ApiUrls,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResp) GetApiUrls() []string {
	if x != nil {
		return x.ApiUrls
	}
	return nil
}

type InfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *InfoReq) Reset() {
	*x = InfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReq) ProtoMessage() {}

func (x *InfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReq.ProtoReflect.Descriptor instead.
func (*InfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{2}
}

func (x *InfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type InfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar         string          `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name           string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MenuListTree   []*MenuListTree `protobuf:"bytes,3,rep,name=menuListTree,proto3" json:"menuListTree,omitempty"`
	BackgroundUrls []string        `protobuf:"bytes,4,rep,name=BackgroundUrls,proto3" json:"BackgroundUrls,omitempty"`
}

func (x *InfoResp) Reset() {
	*x = InfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResp) ProtoMessage() {}

func (x *InfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResp.ProtoReflect.Descriptor instead.
func (*InfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{3}
}

func (x *InfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *InfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoResp) GetMenuListTree() []*MenuListTree {
	if x != nil {
		return x.MenuListTree
	}
	return nil
}

func (x *InfoResp) GetBackgroundUrls() []string {
	if x != nil {
		return x.BackgroundUrls
	}
	return nil
}

type UserAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email      string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	UserName   string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NickName   string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Avatar     string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DeptId     int64  `protobuf:"varint,6,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`
	CreateBy   string `protobuf:"bytes,7,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	UserStatus int32  `protobuf:"varint,8,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	JobId      int64  `protobuf:"varint,9,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *UserAddReq) Reset() {
	*x = UserAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddReq) ProtoMessage() {}

func (x *UserAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddReq.ProtoReflect.Descriptor instead.
func (*UserAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{4}
}

func (x *UserAddReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserAddReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserAddReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserAddReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserAddReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserAddReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserAddReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserAddReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type UserAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UserAddResp) Reset() {
	*x = UserAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddResp) ProtoMessage() {}

func (x *UserAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddResp.ProtoReflect.Descriptor instead.
func (*UserAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{5}
}

func (x *UserAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserName   string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NickName   string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Mobile     string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	UserStatus int32  `protobuf:"varint,7,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	DeptId     int64  `protobuf:"varint,8,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`
}

func (x *UserListReq) Reset() {
	*x = UserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListReq) ProtoMessage() {}

func (x *UserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListReq.ProtoReflect.Descriptor instead.
func (*UserListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{6}
}

func (x *UserListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserListReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserListReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

type UserListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName   string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NickName   string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Avatar     string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	JobId      int64  `protobuf:"varint,5,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	DelFlag    int32  `protobuf:"varint,6,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	Email      string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Mobile     string `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`
	UserStatus int32  `protobuf:"varint,9,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	DeptId     int64  `protobuf:"varint,10,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *UserListData) Reset() {
	*x = UserListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListData) ProtoMessage() {}

func (x *UserListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListData.ProtoReflect.Descriptor instead.
func (*UserListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{7}
}

func (x *UserListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserListData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserListData) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *UserListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *UserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserListData) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserListData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *UserListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserListResp) Reset() {
	*x = UserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResp) ProtoMessage() {}

func (x *UserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResp.ProtoReflect.Descriptor instead.
func (*UserListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{8}
}

func (x *UserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserListResp) GetList() []*UserListData {
	if x != nil {
		return x.List
	}
	return nil
}

type UserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Mobile     string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	UserName   string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NickName   string `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Avatar     string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DeptId     int64  `protobuf:"varint,7,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`
	UpdateBy   string `protobuf:"bytes,8,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	JobId      int64  `protobuf:"varint,9,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	UserStatus int32  `protobuf:"varint,10,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
}

func (x *UserUpdateReq) Reset() {
	*x = UserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateReq) ProtoMessage() {}

func (x *UserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateReq.ProtoReflect.Descriptor instead.
func (*UserUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{9}
}

func (x *UserUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserUpdateReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserUpdateReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserUpdateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UserUpdateReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *UserUpdateReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

type UserUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UserUpdateResp) Reset() {
	*x = UserUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateResp) ProtoMessage() {}

func (x *UserUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateResp.ProtoReflect.Descriptor instead.
func (*UserUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{10}
}

func (x *UserUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UserDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *UserDeleteReq) Reset() {
	*x = UserDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteReq) ProtoMessage() {}

func (x *UserDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteReq.ProtoReflect.Descriptor instead.
func (*UserDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{11}
}

func (x *UserDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UserDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UserDeleteResp) Reset() {
	*x = UserDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteResp) ProtoMessage() {}

func (x *UserDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteResp.ProtoReflect.Descriptor instead.
func (*UserDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{12}
}

func (x *UserDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ReSetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateBy string `protobuf:"bytes,2,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
}

func (x *ReSetPasswordReq) Reset() {
	*x = ReSetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReSetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReSetPasswordReq) ProtoMessage() {}

func (x *ReSetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReSetPasswordReq.ProtoReflect.Descriptor instead.
func (*ReSetPasswordReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{13}
}

func (x *ReSetPasswordReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReSetPasswordReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type ReSetPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ReSetPasswordResp) Reset() {
	*x = ReSetPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReSetPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReSetPasswordResp) ProtoMessage() {}

func (x *ReSetPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReSetPasswordResp.ProtoReflect.Descriptor instead.
func (*ReSetPasswordResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{14}
}

func (x *ReSetPasswordResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserStatus int32  `protobuf:"varint,2,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	UpdateBy   string `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
}

func (x *UserStatusReq) Reset() {
	*x = UserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusReq) ProtoMessage() {}

func (x *UserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusReq.ProtoReflect.Descriptor instead.
func (*UserStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{15}
}

func (x *UserStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserStatusReq) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UserStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UserStatusResp) Reset() {
	*x = UserStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusResp) ProtoMessage() {}

func (x *UserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusResp.ProtoReflect.Descriptor instead.
func (*UserStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{16}
}

func (x *UserStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateUserRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleIds []int64 `protobuf:"varint,2,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *UpdateUserRoleListReq) Reset() {
	*x = UpdateUserRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleListReq) ProtoMessage() {}

func (x *UpdateUserRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleListReq.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUserRoleListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserRoleListReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UpdateUserRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateUserRoleListResp) Reset() {
	*x = UpdateUserRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleListResp) ProtoMessage() {}

func (x *UpdateUserRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleListResp.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateUserRoleListResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryUserRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserId   int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *QueryUserRoleListReq) Reset() {
	*x = QueryUserRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRoleListReq) ProtoMessage() {}

func (x *QueryUserRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRoleListReq.ProtoReflect.Descriptor instead.
func (*QueryUserRoleListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{19}
}

func (x *QueryUserRoleListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *QueryUserRoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryUserRoleListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QueryUserRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*RoleListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	RoleIds []int64         `protobuf:"varint,2,rep,packed,name=RoleIds,proto3" json:"RoleIds,omitempty"`
	Total   int64           `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryUserRoleListResp) Reset() {
	*x = QueryUserRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRoleListResp) ProtoMessage() {}

func (x *QueryUserRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRoleListResp.ProtoReflect.Descriptor instead.
func (*QueryUserRoleListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{20}
}

func (x *QueryUserRoleListResp) GetList() []*RoleListData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryUserRoleListResp) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *QueryUserRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// role start---------------------
type RoleAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Remark   string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateBy string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	Status   int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleAddReq) Reset() {
	*x = RoleAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAddReq) ProtoMessage() {}

func (x *RoleAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAddReq.ProtoReflect.Descriptor instead.
func (*RoleAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{21}
}

func (x *RoleAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *RoleAddReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *RoleAddResp) Reset() {
	*x = RoleAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAddResp) ProtoMessage() {}

func (x *RoleAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAddResp.ProtoReflect.Descriptor instead.
func (*RoleAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{22}
}

func (x *RoleAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type RoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleListReq) Reset() {
	*x = RoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListReq) ProtoMessage() {}

func (x *RoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListReq.ProtoReflect.Descriptor instead.
func (*RoleListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{23}
}

func (x *RoleListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *RoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoleListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark     string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateBy   string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateBy   string `protobuf:"bytes,6,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateTime string `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DelFlag    int32  `protobuf:"varint,8,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	Status     int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleListData) Reset() {
	*x = RoleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListData) ProtoMessage() {}

func (x *RoleListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListData.ProtoReflect.Descriptor instead.
func (*RoleListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{24}
}

func (x *RoleListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *RoleListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *RoleListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RoleListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *RoleListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RoleListResp) Reset() {
	*x = RoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListResp) ProtoMessage() {}

func (x *RoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListResp.ProtoReflect.Descriptor instead.
func (*RoleListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{25}
}

func (x *RoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleListResp) GetList() []*RoleListData {
	if x != nil {
		return x.List
	}
	return nil
}

type RoleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	UpdateBy string `protobuf:"bytes,4,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	Status   int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleUpdateReq) Reset() {
	*x = RoleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateReq) ProtoMessage() {}

func (x *RoleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{26}
}

func (x *RoleUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *RoleUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *RoleUpdateResp) Reset() {
	*x = RoleUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateResp) ProtoMessage() {}

func (x *RoleUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateResp.ProtoReflect.Descriptor instead.
func (*RoleUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{27}
}

func (x *RoleUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type RoleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RoleDeleteReq) Reset() {
	*x = RoleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteReq) ProtoMessage() {}

func (x *RoleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteReq.ProtoReflect.Descriptor instead.
func (*RoleDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{28}
}

func (x *RoleDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RoleDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *RoleDeleteResp) Reset() {
	*x = RoleDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteResp) ProtoMessage() {}

func (x *RoleDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteResp.ProtoReflect.Descriptor instead.
func (*RoleDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{29}
}

func (x *RoleDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryRoleMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
}

func (x *QueryRoleMenuListReq) Reset() {
	*x = QueryRoleMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListReq) ProtoMessage() {}

func (x *QueryRoleMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{30}
}

func (x *QueryRoleMenuListReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type QueryRoleMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*MenuListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	MenuIds []int64         `protobuf:"varint,2,rep,packed,name=MenuIds,proto3" json:"MenuIds,omitempty"`
}

func (x *QueryRoleMenuListResp) Reset() {
	*x = QueryRoleMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListResp) ProtoMessage() {}

func (x *QueryRoleMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{31}
}

func (x *QueryRoleMenuListResp) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRoleMenuListResp) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

// menu start---------------------
type MenuAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Url           string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Perms         string `protobuf:"bytes,4,opt,name=perms,proto3" json:"perms,omitempty"`
	Type          int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Icon          string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	OrderNum      int32  `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	CreateBy      string `protobuf:"bytes,8,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	VuePath       string `protobuf:"bytes,9,opt,name=vuePath,proto3" json:"vuePath,omitempty"`
	VueComponent  string `protobuf:"bytes,10,opt,name=vueComponent,proto3" json:"vueComponent,omitempty"`
	VueIcon       string `protobuf:"bytes,11,opt,name=vueIcon,proto3" json:"vueIcon,omitempty"`
	VueRedirect   string `protobuf:"bytes,12,opt,name=vueRedirect,proto3" json:"vueRedirect,omitempty"`
	DelFlag       int32  `protobuf:"varint,13,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	BackgroundUrl string `protobuf:"bytes,14,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"`
}

func (x *MenuAddReq) Reset() {
	*x = MenuAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuAddReq) ProtoMessage() {}

func (x *MenuAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuAddReq.ProtoReflect.Descriptor instead.
func (*MenuAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{32}
}

func (x *MenuAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuAddReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuAddReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuAddReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenuAddReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuAddReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuAddReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *MenuAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MenuAddReq) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuAddReq) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuAddReq) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuAddReq) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *MenuAddReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *MenuAddReq) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

type MenuAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *MenuAddResp) Reset() {
	*x = MenuAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuAddResp) ProtoMessage() {}

func (x *MenuAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuAddResp.ProtoReflect.Descriptor instead.
func (*MenuAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{33}
}

func (x *MenuAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type MenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 current = 1;
	// int64 pageSize = 2;
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MenuListReq) Reset() {
	*x = MenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListReq) ProtoMessage() {}

func (x *MenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListReq.ProtoReflect.Descriptor instead.
func (*MenuListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{34}
}

func (x *MenuListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      int64  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Url           string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Perms         string `protobuf:"bytes,5,opt,name=perms,proto3" json:"perms,omitempty"`
	Type          int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Icon          string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	OrderNum      int32  `protobuf:"varint,8,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	CreateBy      string `protobuf:"bytes,10,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	CreateTime    string `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateBy      string `protobuf:"bytes,12,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateTime    string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DelFlag       int32  `protobuf:"varint,14,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	VuePath       string `protobuf:"bytes,15,opt,name=vuePath,proto3" json:"vuePath,omitempty"`
	VueComponent  string `protobuf:"bytes,16,opt,name=vueComponent,proto3" json:"vueComponent,omitempty"`
	VueIcon       string `protobuf:"bytes,17,opt,name=vueIcon,proto3" json:"vueIcon,omitempty"`
	VueRedirect   string `protobuf:"bytes,18,opt,name=vueRedirect,proto3" json:"vueRedirect,omitempty"`
	BackgroundUrl string `protobuf:"bytes,19,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"`
}

func (x *MenuListData) Reset() {
	*x = MenuListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListData) ProtoMessage() {}

func (x *MenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListData.ProtoReflect.Descriptor instead.
func (*MenuListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{35}
}

func (x *MenuListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuListData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuListData) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenuListData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuListData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuListData) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *MenuListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MenuListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MenuListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MenuListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *MenuListData) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuListData) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuListData) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuListData) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *MenuListData) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

type MenuListTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon         string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	ParentId     int64  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Path         string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	VuePath      string `protobuf:"bytes,6,opt,name=vue_path,json=vuePath,proto3" json:"vue_path,omitempty"`
	VueComponent string `protobuf:"bytes,7,opt,name=vue_component,json=vueComponent,proto3" json:"vue_component,omitempty"`
	VueIcon      string `protobuf:"bytes,8,opt,name=vue_icon,json=vueIcon,proto3" json:"vue_icon,omitempty"`
	VueRedirect  string `protobuf:"bytes,9,opt,name=vue_redirect,json=vueRedirect,proto3" json:"vue_redirect,omitempty"`
}

func (x *MenuListTree) Reset() {
	*x = MenuListTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListTree) ProtoMessage() {}

func (x *MenuListTree) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListTree.ProtoReflect.Descriptor instead.
func (*MenuListTree) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{36}
}

func (x *MenuListTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuListTree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListTree) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuListTree) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuListTree) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuListTree) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuListTree) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuListTree) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuListTree) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

type MenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MenuListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuListResp) Reset() {
	*x = MenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListResp) ProtoMessage() {}

func (x *MenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListResp.ProtoReflect.Descriptor instead.
func (*MenuListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{37}
}

func (x *MenuListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MenuListResp) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

type MenuUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      int64  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Url           string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Perms         string `protobuf:"bytes,5,opt,name=perms,proto3" json:"perms,omitempty"`
	Type          int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Icon          string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	OrderNum      int32  `protobuf:"varint,8,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	UpdateBy      string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	VuePath       string `protobuf:"bytes,10,opt,name=vuePath,proto3" json:"vuePath,omitempty"`
	VueComponent  string `protobuf:"bytes,11,opt,name=vueComponent,proto3" json:"vueComponent,omitempty"`
	VueIcon       string `protobuf:"bytes,12,opt,name=vueIcon,proto3" json:"vueIcon,omitempty"`
	VueRedirect   string `protobuf:"bytes,13,opt,name=vueRedirect,proto3" json:"vueRedirect,omitempty"`
	DelFlag       int32  `protobuf:"varint,14,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	BackgroundUrl string `protobuf:"bytes,15,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"`
}

func (x *MenuUpdateReq) Reset() {
	*x = MenuUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuUpdateReq) ProtoMessage() {}

func (x *MenuUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuUpdateReq.ProtoReflect.Descriptor instead.
func (*MenuUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{38}
}

func (x *MenuUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuUpdateReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuUpdateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuUpdateReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenuUpdateReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuUpdateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuUpdateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *MenuUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuUpdateReq) GetVuePath() string {
	if x != nil {
		return x.VuePath
	}
	return ""
}

func (x *MenuUpdateReq) GetVueComponent() string {
	if x != nil {
		return x.VueComponent
	}
	return ""
}

func (x *MenuUpdateReq) GetVueIcon() string {
	if x != nil {
		return x.VueIcon
	}
	return ""
}

func (x *MenuUpdateReq) GetVueRedirect() string {
	if x != nil {
		return x.VueRedirect
	}
	return ""
}

func (x *MenuUpdateReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *MenuUpdateReq) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

type MenuUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *MenuUpdateResp) Reset() {
	*x = MenuUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuUpdateResp) ProtoMessage() {}

func (x *MenuUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuUpdateResp.ProtoReflect.Descriptor instead.
func (*MenuUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{39}
}

func (x *MenuUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type MenuDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *MenuDeleteReq) Reset() {
	*x = MenuDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDeleteReq) ProtoMessage() {}

func (x *MenuDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDeleteReq.ProtoReflect.Descriptor instead.
func (*MenuDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{40}
}

func (x *MenuDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MenuDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *MenuDeleteResp) Reset() {
	*x = MenuDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDeleteResp) ProtoMessage() {}

func (x *MenuDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDeleteResp.ProtoReflect.Descriptor instead.
func (*MenuDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{41}
}

func (x *MenuDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateMenuRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []int64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *UpdateMenuRoleReq) Reset() {
	*x = UpdateMenuRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRoleReq) ProtoMessage() {}

func (x *UpdateMenuRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuRoleReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateMenuRoleReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateMenuRoleReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateMenuRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMenuRoleResp) Reset() {
	*x = UpdateMenuRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRoleResp) ProtoMessage() {}

func (x *UpdateMenuRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuRoleResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateMenuRoleResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// dict start---------------------
// 添加字典表
type DictAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=CreateBy,proto3" json:"CreateBy,omitempty"`      //创建者
	DictName   string `protobuf:"bytes,2,opt,name=DictName,proto3" json:"DictName,omitempty"`      //字典名称
	DictStatus int32  `protobuf:"varint,3,opt,name=DictStatus,proto3" json:"DictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,4,opt,name=DictType,proto3" json:"DictType,omitempty"`      //字典类型
	Remark     string `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`          //备注信息
}

func (x *DictAddReq) Reset() {
	*x = DictAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictAddReq) ProtoMessage() {}

func (x *DictAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictAddReq.ProtoReflect.Descriptor instead.
func (*DictAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{44}
}

func (x *DictAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictAddReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictAddReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictAddReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictAddResp) Reset() {
	*x = DictAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictAddResp) ProtoMessage() {}

func (x *DictAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictAddResp.ProtoReflect.Descriptor instead.
func (*DictAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{45}
}

func (x *DictAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除字典表
type DictDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DictDeleteReq) Reset() {
	*x = DictDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDeleteReq) ProtoMessage() {}

func (x *DictDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDeleteReq.ProtoReflect.Descriptor instead.
func (*DictDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{46}
}

func (x *DictDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DictDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictDeleteResp) Reset() {
	*x = DictDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDeleteResp) ProtoMessage() {}

func (x *DictDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDeleteResp.ProtoReflect.Descriptor instead.
func (*DictDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{47}
}

func (x *DictDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典表
type DictUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName   string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`      //字典名称
	DictStatus int32  `protobuf:"varint,2,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	Remark     string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`          //备注信息
	UpdateBy   string `protobuf:"bytes,6,opt,name=updateBy,proto3" json:"updateBy,omitempty"`      //更新者
}

func (x *DictUpdateReq) Reset() {
	*x = DictUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictUpdateReq) ProtoMessage() {}

func (x *DictUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictUpdateReq.ProtoReflect.Descriptor instead.
func (*DictUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{48}
}

func (x *DictUpdateReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictUpdateReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictUpdateReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type DictUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictUpdateResp) Reset() {
	*x = DictUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictUpdateResp) ProtoMessage() {}

func (x *DictUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictUpdateResp.ProtoReflect.Descriptor instead.
func (*DictUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{49}
}

func (x *DictUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询单条字典表记录
type DictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //编号
}

func (x *DictReq) Reset() {
	*x = DictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictReq) ProtoMessage() {}

func (x *DictReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictReq.ProtoReflect.Descriptor instead.
func (*DictReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{50}
}

func (x *DictReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=createBy,proto3" json:"createBy,omitempty"`      //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`  //创建时间
	DelFlag    int32  `protobuf:"varint,3,opt,name=delFlag,proto3" json:"delFlag,omitempty"`       //是否删除  1：已删除  0：正常
	DictName   string `protobuf:"bytes,4,opt,name=dictName,proto3" json:"dictName,omitempty"`      //字典名称
	DictStatus int32  `protobuf:"varint,5,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	Id         int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	IsSystem   int32  `protobuf:"varint,8,opt,name=isSystem,proto3" json:"isSystem,omitempty"`     //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`          //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`     //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *DictResp) Reset() {
	*x = DictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictResp) ProtoMessage() {}

func (x *DictResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictResp.ProtoReflect.Descriptor instead.
func (*DictResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{51}
}

func (x *DictResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictResp) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DictResp) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictResp) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictResp) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictResp) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *DictResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询字典表列表
type DictListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	IsSystem   int32  `protobuf:"varint,3,opt,name=isSystem,proto3" json:"isSystem,omitempty"`     //是否系统预留  0：否  1：是
	DictName   string `protobuf:"bytes,4,opt,name=dictName,proto3" json:"dictName,omitempty"`      //字典名称
	DictStatus int32  `protobuf:"varint,5,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
}

func (x *DictListReq) Reset() {
	*x = DictListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictListReq) ProtoMessage() {}

func (x *DictListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictListReq.ProtoReflect.Descriptor instead.
func (*DictListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{52}
}

func (x *DictListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *DictListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DictListReq) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *DictListReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictListReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

type DictListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=createBy,proto3" json:"createBy,omitempty"`      //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`  //创建时间
	DelFlag    int32  `protobuf:"varint,3,opt,name=delFlag,proto3" json:"delFlag,omitempty"`       //是否删除  1：已删除  0：正常
	DictName   string `protobuf:"bytes,4,opt,name=dictName,proto3" json:"dictName,omitempty"`      //字典名称
	DictStatus int32  `protobuf:"varint,5,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,6,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	Id         int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	IsSystem   int32  `protobuf:"varint,8,opt,name=isSystem,proto3" json:"isSystem,omitempty"`     //是否系统预留  0：否  1：是
	Remark     string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`          //备注信息
	UpdateBy   string `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`     //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *DictListData) Reset() {
	*x = DictListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictListData) ProtoMessage() {}

func (x *DictListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictListData.ProtoReflect.Descriptor instead.
func (*DictListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{53}
}

func (x *DictListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DictListData) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictListData) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictListData) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *DictListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type DictListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DictListResp) Reset() {
	*x = DictListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictListResp) ProtoMessage() {}

func (x *DictListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictListResp.ProtoReflect.Descriptor instead.
func (*DictListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{54}
}

func (x *DictListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DictListResp) GetList() []*DictListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加字典项表
type DictItemAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=createBy,proto3" json:"createBy,omitempty"`      //创建者
	Remark     string `protobuf:"bytes,2,opt,name=Remark,proto3" json:"Remark,omitempty"`          //备注信息
	IsDefault  int32  `protobuf:"varint,3,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`   //是否默认  0：否  1：是
	DictLabel  string `protobuf:"bytes,4,opt,name=DictLabel,proto3" json:"DictLabel,omitempty"`    //字典标签
	DictSort   int32  `protobuf:"varint,5,opt,name=DictSort,proto3" json:"DictSort,omitempty"`     //排序
	DictStatus int32  `protobuf:"varint,6,opt,name=DictStatus,proto3" json:"DictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,7,opt,name=DictType,proto3" json:"DictType,omitempty"`      //字典类型
	DictValue  string `protobuf:"bytes,8,opt,name=DictValue,proto3" json:"DictValue,omitempty"`    //字典键值
}

func (x *DictItemAddReq) Reset() {
	*x = DictItemAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemAddReq) ProtoMessage() {}

func (x *DictItemAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemAddReq.ProtoReflect.Descriptor instead.
func (*DictItemAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{55}
}

func (x *DictItemAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictItemAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictItemAddReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictItemAddReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemAddReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictItemAddReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictItemAddReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemAddReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

type DictItemAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictItemAddResp) Reset() {
	*x = DictItemAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemAddResp) ProtoMessage() {}

func (x *DictItemAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemAddResp.ProtoReflect.Descriptor instead.
func (*DictItemAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{56}
}

func (x *DictItemAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除字典项表
type DictItemDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DictItemDeleteReq) Reset() {
	*x = DictItemDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemDeleteReq) ProtoMessage() {}

func (x *DictItemDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemDeleteReq.ProtoReflect.Descriptor instead.
func (*DictItemDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{57}
}

func (x *DictItemDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DictItemDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictItemDeleteResp) Reset() {
	*x = DictItemDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemDeleteResp) ProtoMessage() {}

func (x *DictItemDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemDeleteResp.ProtoReflect.Descriptor instead.
func (*DictItemDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{58}
}

func (x *DictItemDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新字典项表
type DictItemUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateBy   string `protobuf:"bytes,1,opt,name=updateBy,proto3" json:"updateBy,omitempty"`      //创建者
	Remark     string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`          //备注信息
	DelFlag    int32  `protobuf:"varint,3,opt,name=delFlag,proto3" json:"delFlag,omitempty"`       //是否删除  1：已删除  0：正常
	DictLabel  string `protobuf:"bytes,4,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`    //字典标签
	DictSort   int32  `protobuf:"varint,5,opt,name=dictSort,proto3" json:"dictSort,omitempty"`     //排序
	DictStatus int32  `protobuf:"varint,6,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,7,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	DictValue  string `protobuf:"bytes,8,opt,name=dictValue,proto3" json:"dictValue,omitempty"`    //字典键值
	Id         int64  `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	IsDefault  int32  `protobuf:"varint,10,opt,name=isDefault,proto3" json:"isDefault,omitempty"`  //是否默认  0：否  1：是
}

func (x *DictItemUpdateReq) Reset() {
	*x = DictItemUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemUpdateReq) ProtoMessage() {}

func (x *DictItemUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemUpdateReq.ProtoReflect.Descriptor instead.
func (*DictItemUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{59}
}

func (x *DictItemUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictItemUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictItemUpdateReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DictItemUpdateReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemUpdateReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictItemUpdateReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictItemUpdateReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemUpdateReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictItemUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictItemUpdateReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type DictItemUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DictItemUpdateResp) Reset() {
	*x = DictItemUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemUpdateResp) ProtoMessage() {}

func (x *DictItemUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemUpdateResp.ProtoReflect.Descriptor instead.
func (*DictItemUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{60}
}

func (x *DictItemUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询单条字典项表记录
type DictItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //编号
}

func (x *DictItemReq) Reset() {
	*x = DictItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemReq) ProtoMessage() {}

func (x *DictItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemReq.ProtoReflect.Descriptor instead.
func (*DictItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{61}
}

func (x *DictItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DictItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=createBy,proto3" json:"createBy,omitempty"`      //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`  //创建时间
	DelFlag    int32  `protobuf:"varint,3,opt,name=delFlag,proto3" json:"delFlag,omitempty"`       //是否删除  1：已删除  0：正常
	DictLabel  string `protobuf:"bytes,4,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`    //字典标签
	DictSort   int32  `protobuf:"varint,5,opt,name=dictSort,proto3" json:"dictSort,omitempty"`     //排序
	DictStatus int32  `protobuf:"varint,6,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,7,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	DictValue  string `protobuf:"bytes,8,opt,name=dictValue,proto3" json:"dictValue,omitempty"`    //字典键值
	Id         int64  `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	IsDefault  int32  `protobuf:"varint,10,opt,name=isDefault,proto3" json:"isDefault,omitempty"`  //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`         //备注信息
	UpdateBy   string `protobuf:"bytes,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`     //更新者
	UpdateTime string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *DictItemResp) Reset() {
	*x = DictItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemResp) ProtoMessage() {}

func (x *DictItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemResp.ProtoReflect.Descriptor instead.
func (*DictItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{62}
}

func (x *DictItemResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictItemResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictItemResp) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DictItemResp) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemResp) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictItemResp) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictItemResp) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemResp) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictItemResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictItemResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictItemResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictItemResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询字典项表列表
type DictItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	DictType   string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	DictLabel  string `protobuf:"bytes,4,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`    //字典标签
	DictStatus int32  `protobuf:"varint,6,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
}

func (x *DictItemListReq) Reset() {
	*x = DictItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemListReq) ProtoMessage() {}

func (x *DictItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemListReq.ProtoReflect.Descriptor instead.
func (*DictItemListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{63}
}

func (x *DictItemListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *DictItemListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DictItemListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemListReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemListReq) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

type DictItemListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateBy   string `protobuf:"bytes,1,opt,name=createBy,proto3" json:"createBy,omitempty"`      //创建者
	CreateTime string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`  //创建时间
	DelFlag    int32  `protobuf:"varint,3,opt,name=delFlag,proto3" json:"delFlag,omitempty"`       //是否删除  1：已删除  0：正常
	DictLabel  string `protobuf:"bytes,4,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`    //字典标签
	DictSort   int32  `protobuf:"varint,5,opt,name=dictSort,proto3" json:"dictSort,omitempty"`     //排序
	DictStatus int32  `protobuf:"varint,6,opt,name=dictStatus,proto3" json:"dictStatus,omitempty"` //字典状态
	DictType   string `protobuf:"bytes,7,opt,name=dictType,proto3" json:"dictType,omitempty"`      //字典类型
	DictValue  string `protobuf:"bytes,8,opt,name=dictValue,proto3" json:"dictValue,omitempty"`    //字典键值
	Id         int64  `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`                 //编号
	IsDefault  int32  `protobuf:"varint,10,opt,name=isDefault,proto3" json:"isDefault,omitempty"`  //是否默认  0：否  1：是
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`         //备注信息
	UpdateBy   string `protobuf:"bytes,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`     //更新者
	UpdateTime string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *DictItemListData) Reset() {
	*x = DictItemListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemListData) ProtoMessage() {}

func (x *DictItemListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemListData.ProtoReflect.Descriptor instead.
func (*DictItemListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{64}
}

func (x *DictItemListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DictItemListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictItemListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DictItemListData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictItemListData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictItemListData) GetDictStatus() int32 {
	if x != nil {
		return x.DictStatus
	}
	return 0
}

func (x *DictItemListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictItemListData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictItemListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictItemListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictItemListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictItemListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictItemListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type DictItemListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictItemListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DictItemListResp) Reset() {
	*x = DictItemListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItemListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItemListResp) ProtoMessage() {}

func (x *DictItemListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItemListResp.ProtoReflect.Descriptor instead.
func (*DictItemListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{65}
}

func (x *DictItemListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DictItemListResp) GetList() []*DictItemListData {
	if x != nil {
		return x.List
	}
	return nil
}

// dept start---------------------
type DeptAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName  string  `protobuf:"bytes,1,opt,name=DeptName,proto3" json:"DeptName,omitempty"`
	ParentId  int64   `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	OrderNum  int32   `protobuf:"varint,3,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	CreateBy  string  `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	ParentIds []int64 `protobuf:"varint,5,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
}

func (x *DeptAddReq) Reset() {
	*x = DeptAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptAddReq) ProtoMessage() {}

func (x *DeptAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptAddReq.ProtoReflect.Descriptor instead.
func (*DeptAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{66}
}

func (x *DeptAddReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptAddReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptAddReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *DeptAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DeptAddReq) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

type DeptAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeptAddResp) Reset() {
	*x = DeptAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptAddResp) ProtoMessage() {}

func (x *DeptAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptAddResp.ProtoReflect.Descriptor instead.
func (*DeptAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{67}
}

func (x *DeptAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type DeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName string `protobuf:"bytes,1,opt,name=DeptName,proto3" json:"DeptName,omitempty"`
}

func (x *DeptListReq) Reset() {
	*x = DeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListReq) ProtoMessage() {}

func (x *DeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListReq.ProtoReflect.Descriptor instead.
func (*DeptListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{68}
}

func (x *DeptListReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

type DeptListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeptName   string  `protobuf:"bytes,2,opt,name=DeptName,proto3" json:"DeptName,omitempty"`
	ParentId   int64   `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	OrderNum   int32   `protobuf:"varint,4,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	CreateBy   string  `protobuf:"bytes,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	CreateTime string  `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateBy   string  `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateTime string  `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DelFlag    int32   `protobuf:"varint,9,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	ParentIds  []int64 `protobuf:"varint,10,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
}

func (x *DeptListData) Reset() {
	*x = DeptListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListData) ProtoMessage() {}

func (x *DeptListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListData.ProtoReflect.Descriptor instead.
func (*DeptListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{69}
}

func (x *DeptListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptListData) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptListData) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *DeptListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *DeptListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DeptListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DeptListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *DeptListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *DeptListData) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

type DeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DeptListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DeptListResp) Reset() {
	*x = DeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListResp) ProtoMessage() {}

func (x *DeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListResp.ProtoReflect.Descriptor instead.
func (*DeptListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{70}
}

func (x *DeptListResp) GetList() []*DeptListData {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeptName  string  `protobuf:"bytes,2,opt,name=DeptName,proto3" json:"DeptName,omitempty"`
	ParentId  int64   `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	OrderNum  int32   `protobuf:"varint,4,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	UpdateBy  string  `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	ParentIds []int64 `protobuf:"varint,8,rep,packed,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	DelFlag   int32   `protobuf:"varint,9,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
}

func (x *DeptUpdateReq) Reset() {
	*x = DeptUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUpdateReq) ProtoMessage() {}

func (x *DeptUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUpdateReq.ProtoReflect.Descriptor instead.
func (*DeptUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{71}
}

func (x *DeptUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptUpdateReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptUpdateReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptUpdateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *DeptUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DeptUpdateReq) GetParentIds() []int64 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *DeptUpdateReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

type DeptUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeptUpdateResp) Reset() {
	*x = DeptUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUpdateResp) ProtoMessage() {}

func (x *DeptUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUpdateResp.ProtoReflect.Descriptor instead.
func (*DeptUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{72}
}

func (x *DeptUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type DeptDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeptDeleteReq) Reset() {
	*x = DeptDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDeleteReq) ProtoMessage() {}

func (x *DeptDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDeleteReq.ProtoReflect.Descriptor instead.
func (*DeptDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{73}
}

func (x *DeptDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeptDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeptDeleteResp) Reset() {
	*x = DeptDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDeleteResp) ProtoMessage() {}

func (x *DeptDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDeleteResp.ProtoReflect.Descriptor instead.
func (*DeptDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{74}
}

func (x *DeptDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// loginLog start---------------------
type LoginLogAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	CreateBy string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
}

func (x *LoginLogAddReq) Reset() {
	*x = LoginLogAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogAddReq) ProtoMessage() {}

func (x *LoginLogAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogAddReq.ProtoReflect.Descriptor instead.
func (*LoginLogAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{75}
}

func (x *LoginLogAddReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogAddReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LoginLogAddReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginLogAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type LoginLogAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *LoginLogAddResp) Reset() {
	*x = LoginLogAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogAddResp) ProtoMessage() {}

func (x *LoginLogAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogAddResp.ProtoReflect.Descriptor instead.
func (*LoginLogAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{76}
}

func (x *LoginLogAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type LoginLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Ip       string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *LoginLogListReq) Reset() {
	*x = LoginLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogListReq) ProtoMessage() {}

func (x *LoginLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogListReq.ProtoReflect.Descriptor instead.
func (*LoginLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{77}
}

func (x *LoginLogListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *LoginLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LoginLogListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogListReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LoginLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName   string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Ip         string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	CreateBy   string `protobuf:"bytes,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	CreateTime string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateBy   string `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateTime string `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *LoginLogListData) Reset() {
	*x = LoginLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogListData) ProtoMessage() {}

func (x *LoginLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogListData.ProtoReflect.Descriptor instead.
func (*LoginLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{78}
}

func (x *LoginLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginLogListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogListData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LoginLogListData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginLogListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *LoginLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *LoginLogListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *LoginLogListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type LoginLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*LoginLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LoginLogListResp) Reset() {
	*x = LoginLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogListResp) ProtoMessage() {}

func (x *LoginLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogListResp.ProtoReflect.Descriptor instead.
func (*LoginLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{79}
}

func (x *LoginLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LoginLogListResp) GetList() []*LoginLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

type LoginLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *LoginLogDeleteReq) Reset() {
	*x = LoginLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogDeleteReq) ProtoMessage() {}

func (x *LoginLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogDeleteReq.ProtoReflect.Descriptor instead.
func (*LoginLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{80}
}

func (x *LoginLogDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LoginLogDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *LoginLogDeleteResp) Reset() {
	*x = LoginLogDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogDeleteResp) ProtoMessage() {}

func (x *LoginLogDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogDeleteResp.ProtoReflect.Descriptor instead.
func (*LoginLogDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{81}
}

func (x *LoginLogDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type StatisticsLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatisticsLoginLogReq) Reset() {
	*x = StatisticsLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsLoginLogReq) ProtoMessage() {}

func (x *StatisticsLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsLoginLogReq.ProtoReflect.Descriptor instead.
func (*StatisticsLoginLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{82}
}

func (x *StatisticsLoginLogReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StatisticsLoginLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询当天登录人数（根据IP）
	CurrentDayLoginCount int32 `protobuf:"varint,1,opt,name=current_day_login_count,json=currentDayLoginCount,proto3" json:"current_day_login_count,omitempty"`
	// 统计当前周登录人数（根据IP）
	CurrentWeekLoginCount int32 `protobuf:"varint,2,opt,name=current_week_login_count,json=currentWeekLoginCount,proto3" json:"current_week_login_count,omitempty"`
	// 统计当前月登录人数（根据IP）
	CurrentMonthLoginCount int32 `protobuf:"varint,3,opt,name=current_month_login_count,json=currentMonthLoginCount,proto3" json:"current_month_login_count,omitempty"`
}

func (x *StatisticsLoginLogResp) Reset() {
	*x = StatisticsLoginLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsLoginLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsLoginLogResp) ProtoMessage() {}

func (x *StatisticsLoginLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsLoginLogResp.ProtoReflect.Descriptor instead.
func (*StatisticsLoginLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{83}
}

func (x *StatisticsLoginLogResp) GetCurrentDayLoginCount() int32 {
	if x != nil {
		return x.CurrentDayLoginCount
	}
	return 0
}

func (x *StatisticsLoginLogResp) GetCurrentWeekLoginCount() int32 {
	if x != nil {
		return x.CurrentWeekLoginCount
	}
	return 0
}

func (x *StatisticsLoginLogResp) GetCurrentMonthLoginCount() int32 {
	if x != nil {
		return x.CurrentMonthLoginCount
	}
	return 0
}

// sysLog start---------------------
type SysLogAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName       string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Operation      string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Method         string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	RequestParams  string `protobuf:"bytes,4,opt,name=request_params,json=requestParams,proto3" json:"request_params,omitempty"`
	Time           int64  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Ip             string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	ResponseParams string `protobuf:"bytes,7,opt,name=response_params,json=responseParams,proto3" json:"response_params,omitempty"`
}

func (x *SysLogAddReq) Reset() {
	*x = SysLogAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogAddReq) ProtoMessage() {}

func (x *SysLogAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogAddReq.ProtoReflect.Descriptor instead.
func (*SysLogAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{84}
}

func (x *SysLogAddReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysLogAddReq) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *SysLogAddReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SysLogAddReq) GetRequestParams() string {
	if x != nil {
		return x.RequestParams
	}
	return ""
}

func (x *SysLogAddReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SysLogAddReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SysLogAddReq) GetResponseParams() string {
	if x != nil {
		return x.ResponseParams
	}
	return ""
}

type SysLogAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SysLogAddResp) Reset() {
	*x = SysLogAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogAddResp) ProtoMessage() {}

func (x *SysLogAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogAddResp.ProtoReflect.Descriptor instead.
func (*SysLogAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{85}
}

func (x *SysLogAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SysLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Method   string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *SysLogListReq) Reset() {
	*x = SysLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogListReq) ProtoMessage() {}

func (x *SysLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogListReq.ProtoReflect.Descriptor instead.
func (*SysLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{86}
}

func (x *SysLogListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SysLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SysLogListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysLogListReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SysLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName       string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Operation      string `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Method         string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	RequestParams  string `protobuf:"bytes,5,opt,name=request_params,json=requestParams,proto3" json:"request_params,omitempty"`
	Time           int64  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Ip             string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	ResponseParams string `protobuf:"bytes,8,opt,name=response_params,json=responseParams,proto3" json:"response_params,omitempty"`
	OperationTime  string `protobuf:"bytes,9,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *SysLogListData) Reset() {
	*x = SysLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogListData) ProtoMessage() {}

func (x *SysLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogListData.ProtoReflect.Descriptor instead.
func (*SysLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{87}
}

func (x *SysLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysLogListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SysLogListData) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *SysLogListData) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SysLogListData) GetRequestParams() string {
	if x != nil {
		return x.RequestParams
	}
	return ""
}

func (x *SysLogListData) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SysLogListData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SysLogListData) GetResponseParams() string {
	if x != nil {
		return x.ResponseParams
	}
	return ""
}

func (x *SysLogListData) GetOperationTime() string {
	if x != nil {
		return x.OperationTime
	}
	return ""
}

type SysLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SysLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SysLogListResp) Reset() {
	*x = SysLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogListResp) ProtoMessage() {}

func (x *SysLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogListResp.ProtoReflect.Descriptor instead.
func (*SysLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{88}
}

func (x *SysLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysLogListResp) GetList() []*SysLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

type SysLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysLogDeleteReq) Reset() {
	*x = SysLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogDeleteReq) ProtoMessage() {}

func (x *SysLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogDeleteReq.ProtoReflect.Descriptor instead.
func (*SysLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{89}
}

func (x *SysLogDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SysLogDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SysLogDeleteResp) Reset() {
	*x = SysLogDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLogDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLogDeleteResp) ProtoMessage() {}

func (x *SysLogDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLogDeleteResp.ProtoReflect.Descriptor instead.
func (*SysLogDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{90}
}

func (x *SysLogDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// job start---------------------
type JobAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobName  string `protobuf:"bytes,1,opt,name=jobName,proto3" json:"jobName,omitempty"`
	OrderNum int32  `protobuf:"varint,2,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	CreateBy string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	Remarks  string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
	DelFlag  int32  `protobuf:"varint,5,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
}

func (x *JobAddReq) Reset() {
	*x = JobAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddReq) ProtoMessage() {}

func (x *JobAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddReq.ProtoReflect.Descriptor instead.
func (*JobAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{91}
}

func (x *JobAddReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobAddReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *JobAddReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *JobAddReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *JobAddReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

type JobAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *JobAddResp) Reset() {
	*x = JobAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddResp) ProtoMessage() {}

func (x *JobAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddResp.ProtoReflect.Descriptor instead.
func (*JobAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{92}
}

func (x *JobAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type JobListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	JobName  string `protobuf:"bytes,3,opt,name=jobName,proto3" json:"jobName,omitempty"`
	DelFlag  int32  `protobuf:"varint,4,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
}

func (x *JobListReq) Reset() {
	*x = JobListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobListReq) ProtoMessage() {}

func (x *JobListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobListReq.ProtoReflect.Descriptor instead.
func (*JobListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{93}
}

func (x *JobListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *JobListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *JobListReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobListReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

type JobListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JobName    string `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`
	OrderNum   int32  `protobuf:"varint,3,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	CreateBy   string `protobuf:"bytes,4,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateBy   string `protobuf:"bytes,6,opt,name=UpdateBy,proto3" json:"UpdateBy,omitempty"`
	UpdateTime string `protobuf:"bytes,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	DelFlag    int32  `protobuf:"varint,8,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	Remarks    string `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *JobListData) Reset() {
	*x = JobListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobListData) ProtoMessage() {}

func (x *JobListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobListData.ProtoReflect.Descriptor instead.
func (*JobListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{94}
}

func (x *JobListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobListData) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobListData) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *JobListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *JobListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *JobListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *JobListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *JobListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *JobListData) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type JobListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*JobListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *JobListResp) Reset() {
	*x = JobListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobListResp) ProtoMessage() {}

func (x *JobListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobListResp.ProtoReflect.Descriptor instead.
func (*JobListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{95}
}

func (x *JobListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *JobListResp) GetList() []*JobListData {
	if x != nil {
		return x.List
	}
	return nil
}

type JobUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JobName  string `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`
	OrderNum int32  `protobuf:"varint,3,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	UpdateBy string `protobuf:"bytes,4,opt,name=UpdateBy,proto3" json:"UpdateBy,omitempty"`
	Remarks  string `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	DelFlag  int32  `protobuf:"varint,6,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
}

func (x *JobUpdateReq) Reset() {
	*x = JobUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobUpdateReq) ProtoMessage() {}

func (x *JobUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobUpdateReq.ProtoReflect.Descriptor instead.
func (*JobUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{96}
}

func (x *JobUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobUpdateReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobUpdateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *JobUpdateReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *JobUpdateReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *JobUpdateReq) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

type JobUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *JobUpdateResp) Reset() {
	*x = JobUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobUpdateResp) ProtoMessage() {}

func (x *JobUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobUpdateResp.ProtoReflect.Descriptor instead.
func (*JobUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{97}
}

func (x *JobUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type JobDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *JobDeleteReq) Reset() {
	*x = JobDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDeleteReq) ProtoMessage() {}

func (x *JobDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDeleteReq.ProtoReflect.Descriptor instead.
func (*JobDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{98}
}

func (x *JobDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type JobDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *JobDeleteResp) Reset() {
	*x = JobDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDeleteResp) ProtoMessage() {}

func (x *JobDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDeleteResp.ProtoReflect.Descriptor instead.
func (*JobDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{99}
}

func (x *JobDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

var File_rpc_sys_sys_proto protoreflect.FileDescriptor

var file_rpc_sys_sys_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x5a,
	0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x22, 0x73, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x73, 0x22,
	0x21, 0x0a, 0x07, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x6d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x73,
	0x22, 0xfa, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x21, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0xe5, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x22, 0x86, 0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x10, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5d, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x24, 0x0a, 0x0e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x49, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x64, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x74, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6d, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x0b, 0x52, 0x6f, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x0c, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0d, 0x52, 0x6f,
	0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x83, 0x03, 0x0a, 0x0a,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72,
	0x6c, 0x22, 0x21, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x33, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xf4, 0x03, 0x0a, 0x0c, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75,
	0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c,
	0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x75,
	0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x51, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x0d,
	0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x75, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x75, 0x65, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x75, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x55, 0x72, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x4d, 0x65,
	0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a,
	0x0e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x44, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22,
	0x21, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xab, 0x01, 0x0a, 0x0d,
	0x44, 0x69, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x69, 0x63,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x19, 0x0a, 0x07, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x08, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xbc, 0x02, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x51,
	0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x44, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xfa, 0x02, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa1,
	0x01, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xfe, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x21, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x29, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x02,
	0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x0c, 0x44, 0x65,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x21, 0x0a, 0x0d,
	0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x24, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x72, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x25, 0x0a, 0x0f, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x74, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x10,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28,
	0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xd5, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4c, 0x6f,
	0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x7a, 0x0a, 0x0d,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x53, 0x79, 0x73,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x0e, 0x53, 0x79, 0x73,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x23, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x92, 0x01,
	0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6a,
	0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0x20, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x76, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xff, 0x01, 0x0a,
	0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x4f,
	0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xa4, 0x01, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x23, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x20, 0x0a, 0x0c, 0x4a,
	0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x23, 0x0a,
	0x0d, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x32, 0xbb, 0x05, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x32, 0xb5, 0x03, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x52, 0x6f,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0x8a, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6e,
	0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75,
	0x41, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x41, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xcf, 0x02, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74,
	0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x12,
	0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x8f, 0x03, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x8a, 0x02, 0x0a, 0x0b, 0x44, 0x65,
	0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x70,
	0x74, 0x41, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xca, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x47, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x20,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x32, 0xdb, 0x01, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x41,
	0x64, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x79, 0x73, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x32, 0xfd, 0x01, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a,
	0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3e, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3e, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_sys_sys_proto_rawDescOnce sync.Once
	file_rpc_sys_sys_proto_rawDescData = file_rpc_sys_sys_proto_rawDesc
)

func file_rpc_sys_sys_proto_rawDescGZIP() []byte {
	file_rpc_sys_sys_proto_rawDescOnce.Do(func() {
		file_rpc_sys_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_sys_sys_proto_rawDescData)
	})
	return file_rpc_sys_sys_proto_rawDescData
}

var file_rpc_sys_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_rpc_sys_sys_proto_goTypes = []interface{}{
	(*LoginReq)(nil),               // 0: sysclient.LoginReq
	(*LoginResp)(nil),              // 1: sysclient.loginResp
	(*InfoReq)(nil),                // 2: sysclient.InfoReq
	(*InfoResp)(nil),               // 3: sysclient.InfoResp
	(*UserAddReq)(nil),             // 4: sysclient.UserAddReq
	(*UserAddResp)(nil),            // 5: sysclient.UserAddResp
	(*UserListReq)(nil),            // 6: sysclient.UserListReq
	(*UserListData)(nil),           // 7: sysclient.UserListData
	(*UserListResp)(nil),           // 8: sysclient.UserListResp
	(*UserUpdateReq)(nil),          // 9: sysclient.UserUpdateReq
	(*UserUpdateResp)(nil),         // 10: sysclient.UserUpdateResp
	(*UserDeleteReq)(nil),          // 11: sysclient.UserDeleteReq
	(*UserDeleteResp)(nil),         // 12: sysclient.UserDeleteResp
	(*ReSetPasswordReq)(nil),       // 13: sysclient.ReSetPasswordReq
	(*ReSetPasswordResp)(nil),      // 14: sysclient.ReSetPasswordResp
	(*UserStatusReq)(nil),          // 15: sysclient.UserStatusReq
	(*UserStatusResp)(nil),         // 16: sysclient.UserStatusResp
	(*UpdateUserRoleListReq)(nil),  // 17: sysclient.UpdateUserRoleListReq
	(*UpdateUserRoleListResp)(nil), // 18: sysclient.UpdateUserRoleListResp
	(*QueryUserRoleListReq)(nil),   // 19: sysclient.QueryUserRoleListReq
	(*QueryUserRoleListResp)(nil),  // 20: sysclient.QueryUserRoleListResp
	(*RoleAddReq)(nil),             // 21: sysclient.RoleAddReq
	(*RoleAddResp)(nil),            // 22: sysclient.RoleAddResp
	(*RoleListReq)(nil),            // 23: sysclient.RoleListReq
	(*RoleListData)(nil),           // 24: sysclient.RoleListData
	(*RoleListResp)(nil),           // 25: sysclient.RoleListResp
	(*RoleUpdateReq)(nil),          // 26: sysclient.RoleUpdateReq
	(*RoleUpdateResp)(nil),         // 27: sysclient.RoleUpdateResp
	(*RoleDeleteReq)(nil),          // 28: sysclient.RoleDeleteReq
	(*RoleDeleteResp)(nil),         // 29: sysclient.RoleDeleteResp
	(*QueryRoleMenuListReq)(nil),   // 30: sysclient.QueryRoleMenuListReq
	(*QueryRoleMenuListResp)(nil),  // 31: sysclient.QueryRoleMenuListResp
	(*MenuAddReq)(nil),             // 32: sysclient.MenuAddReq
	(*MenuAddResp)(nil),            // 33: sysclient.MenuAddResp
	(*MenuListReq)(nil),            // 34: sysclient.MenuListReq
	(*MenuListData)(nil),           // 35: sysclient.MenuListData
	(*MenuListTree)(nil),           // 36: sysclient.MenuListTree
	(*MenuListResp)(nil),           // 37: sysclient.MenuListResp
	(*MenuUpdateReq)(nil),          // 38: sysclient.MenuUpdateReq
	(*MenuUpdateResp)(nil),         // 39: sysclient.MenuUpdateResp
	(*MenuDeleteReq)(nil),          // 40: sysclient.MenuDeleteReq
	(*MenuDeleteResp)(nil),         // 41: sysclient.MenuDeleteResp
	(*UpdateMenuRoleReq)(nil),      // 42: sysclient.UpdateMenuRoleReq
	(*UpdateMenuRoleResp)(nil),     // 43: sysclient.UpdateMenuRoleResp
	(*DictAddReq)(nil),             // 44: sysclient.DictAddReq
	(*DictAddResp)(nil),            // 45: sysclient.DictAddResp
	(*DictDeleteReq)(nil),          // 46: sysclient.DictDeleteReq
	(*DictDeleteResp)(nil),         // 47: sysclient.DictDeleteResp
	(*DictUpdateReq)(nil),          // 48: sysclient.DictUpdateReq
	(*DictUpdateResp)(nil),         // 49: sysclient.DictUpdateResp
	(*DictReq)(nil),                // 50: sysclient.DictReq
	(*DictResp)(nil),               // 51: sysclient.DictResp
	(*DictListReq)(nil),            // 52: sysclient.DictListReq
	(*DictListData)(nil),           // 53: sysclient.DictListData
	(*DictListResp)(nil),           // 54: sysclient.DictListResp
	(*DictItemAddReq)(nil),         // 55: sysclient.DictItemAddReq
	(*DictItemAddResp)(nil),        // 56: sysclient.DictItemAddResp
	(*DictItemDeleteReq)(nil),      // 57: sysclient.DictItemDeleteReq
	(*DictItemDeleteResp)(nil),     // 58: sysclient.DictItemDeleteResp
	(*DictItemUpdateReq)(nil),      // 59: sysclient.DictItemUpdateReq
	(*DictItemUpdateResp)(nil),     // 60: sysclient.DictItemUpdateResp
	(*DictItemReq)(nil),            // 61: sysclient.DictItemReq
	(*DictItemResp)(nil),           // 62: sysclient.DictItemResp
	(*DictItemListReq)(nil),        // 63: sysclient.DictItemListReq
	(*DictItemListData)(nil),       // 64: sysclient.DictItemListData
	(*DictItemListResp)(nil),       // 65: sysclient.DictItemListResp
	(*DeptAddReq)(nil),             // 66: sysclient.DeptAddReq
	(*DeptAddResp)(nil),            // 67: sysclient.DeptAddResp
	(*DeptListReq)(nil),            // 68: sysclient.DeptListReq
	(*DeptListData)(nil),           // 69: sysclient.DeptListData
	(*DeptListResp)(nil),           // 70: sysclient.DeptListResp
	(*DeptUpdateReq)(nil),          // 71: sysclient.DeptUpdateReq
	(*DeptUpdateResp)(nil),         // 72: sysclient.DeptUpdateResp
	(*DeptDeleteReq)(nil),          // 73: sysclient.DeptDeleteReq
	(*DeptDeleteResp)(nil),         // 74: sysclient.DeptDeleteResp
	(*LoginLogAddReq)(nil),         // 75: sysclient.LoginLogAddReq
	(*LoginLogAddResp)(nil),        // 76: sysclient.LoginLogAddResp
	(*LoginLogListReq)(nil),        // 77: sysclient.LoginLogListReq
	(*LoginLogListData)(nil),       // 78: sysclient.LoginLogListData
	(*LoginLogListResp)(nil),       // 79: sysclient.LoginLogListResp
	(*LoginLogDeleteReq)(nil),      // 80: sysclient.LoginLogDeleteReq
	(*LoginLogDeleteResp)(nil),     // 81: sysclient.LoginLogDeleteResp
	(*StatisticsLoginLogReq)(nil),  // 82: sysclient.StatisticsLoginLogReq
	(*StatisticsLoginLogResp)(nil), // 83: sysclient.StatisticsLoginLogResp
	(*SysLogAddReq)(nil),           // 84: sysclient.SysLogAddReq
	(*SysLogAddResp)(nil),          // 85: sysclient.SysLogAddResp
	(*SysLogListReq)(nil),          // 86: sysclient.SysLogListReq
	(*SysLogListData)(nil),         // 87: sysclient.SysLogListData
	(*SysLogListResp)(nil),         // 88: sysclient.SysLogListResp
	(*SysLogDeleteReq)(nil),        // 89: sysclient.SysLogDeleteReq
	(*SysLogDeleteResp)(nil),       // 90: sysclient.SysLogDeleteResp
	(*JobAddReq)(nil),              // 91: sysclient.JobAddReq
	(*JobAddResp)(nil),             // 92: sysclient.JobAddResp
	(*JobListReq)(nil),             // 93: sysclient.JobListReq
	(*JobListData)(nil),            // 94: sysclient.JobListData
	(*JobListResp)(nil),            // 95: sysclient.JobListResp
	(*JobUpdateReq)(nil),           // 96: sysclient.JobUpdateReq
	(*JobUpdateResp)(nil),          // 97: sysclient.JobUpdateResp
	(*JobDeleteReq)(nil),           // 98: sysclient.JobDeleteReq
	(*JobDeleteResp)(nil),          // 99: sysclient.JobDeleteResp
}
var file_rpc_sys_sys_proto_depIdxs = []int32{
	36, // 0: sysclient.InfoResp.menuListTree:type_name -> sysclient.MenuListTree
	7,  // 1: sysclient.UserListResp.list:type_name -> sysclient.UserListData
	24, // 2: sysclient.QueryUserRoleListResp.list:type_name -> sysclient.RoleListData
	24, // 3: sysclient.RoleListResp.list:type_name -> sysclient.RoleListData
	35, // 4: sysclient.QueryRoleMenuListResp.list:type_name -> sysclient.MenuListData
	35, // 5: sysclient.MenuListResp.list:type_name -> sysclient.MenuListData
	53, // 6: sysclient.DictListResp.list:type_name -> sysclient.DictListData
	64, // 7: sysclient.DictItemListResp.list:type_name -> sysclient.DictItemListData
	69, // 8: sysclient.DeptListResp.list:type_name -> sysclient.DeptListData
	78, // 9: sysclient.LoginLogListResp.list:type_name -> sysclient.LoginLogListData
	87, // 10: sysclient.SysLogListResp.list:type_name -> sysclient.SysLogListData
	94, // 11: sysclient.JobListResp.list:type_name -> sysclient.JobListData
	0,  // 12: sysclient.UserService.Login:input_type -> sysclient.LoginReq
	2,  // 13: sysclient.UserService.UserInfo:input_type -> sysclient.InfoReq
	4,  // 14: sysclient.UserService.UserAdd:input_type -> sysclient.UserAddReq
	6,  // 15: sysclient.UserService.UserList:input_type -> sysclient.UserListReq
	9,  // 16: sysclient.UserService.UserUpdate:input_type -> sysclient.UserUpdateReq
	11, // 17: sysclient.UserService.UserDelete:input_type -> sysclient.UserDeleteReq
	13, // 18: sysclient.UserService.ReSetPassword:input_type -> sysclient.ReSetPasswordReq
	15, // 19: sysclient.UserService.UpdateUserStatus:input_type -> sysclient.UserStatusReq
	19, // 20: sysclient.UserService.QueryUserRoleList:input_type -> sysclient.QueryUserRoleListReq
	17, // 21: sysclient.UserService.UpdateUserRoleList:input_type -> sysclient.UpdateUserRoleListReq
	21, // 22: sysclient.RoleService.RoleAdd:input_type -> sysclient.RoleAddReq
	23, // 23: sysclient.RoleService.RoleList:input_type -> sysclient.RoleListReq
	26, // 24: sysclient.RoleService.RoleUpdate:input_type -> sysclient.RoleUpdateReq
	28, // 25: sysclient.RoleService.RoleDelete:input_type -> sysclient.RoleDeleteReq
	30, // 26: sysclient.RoleService.QueryRoleMenuList:input_type -> sysclient.QueryRoleMenuListReq
	42, // 27: sysclient.RoleService.UpdateMenuRoleList:input_type -> sysclient.UpdateMenuRoleReq
	32, // 28: sysclient.MenuService.MenuAdd:input_type -> sysclient.MenuAddReq
	34, // 29: sysclient.MenuService.MenuList:input_type -> sysclient.MenuListReq
	38, // 30: sysclient.MenuService.MenuUpdate:input_type -> sysclient.MenuUpdateReq
	40, // 31: sysclient.MenuService.MenuDelete:input_type -> sysclient.MenuDeleteReq
	44, // 32: sysclient.DictService.AddDict:input_type -> sysclient.DictAddReq
	46, // 33: sysclient.DictService.DeleteDict:input_type -> sysclient.DictDeleteReq
	48, // 34: sysclient.DictService.UpdateDict:input_type -> sysclient.DictUpdateReq
	50, // 35: sysclient.DictService.QueryDict:input_type -> sysclient.DictReq
	52, // 36: sysclient.DictService.QueryDictList:input_type -> sysclient.DictListReq
	55, // 37: sysclient.DictItemService.AddDictItem:input_type -> sysclient.DictItemAddReq
	57, // 38: sysclient.DictItemService.DeleteDictItem:input_type -> sysclient.DictItemDeleteReq
	59, // 39: sysclient.DictItemService.UpdateDictItem:input_type -> sysclient.DictItemUpdateReq
	61, // 40: sysclient.DictItemService.QueryDictItem:input_type -> sysclient.DictItemReq
	63, // 41: sysclient.DictItemService.QueryDictItemList:input_type -> sysclient.DictItemListReq
	66, // 42: sysclient.DeptService.DeptAdd:input_type -> sysclient.DeptAddReq
	68, // 43: sysclient.DeptService.DeptList:input_type -> sysclient.DeptListReq
	71, // 44: sysclient.DeptService.DeptUpdate:input_type -> sysclient.DeptUpdateReq
	73, // 45: sysclient.DeptService.DeptDelete:input_type -> sysclient.DeptDeleteReq
	75, // 46: sysclient.LoginLogService.LoginLogAdd:input_type -> sysclient.LoginLogAddReq
	77, // 47: sysclient.LoginLogService.LoginLogList:input_type -> sysclient.LoginLogListReq
	80, // 48: sysclient.LoginLogService.LoginLogDelete:input_type -> sysclient.LoginLogDeleteReq
	82, // 49: sysclient.LoginLogService.StatisticsLoginLog:input_type -> sysclient.StatisticsLoginLogReq
	84, // 50: sysclient.SysLogService.SysLogAdd:input_type -> sysclient.SysLogAddReq
	86, // 51: sysclient.SysLogService.SysLogList:input_type -> sysclient.SysLogListReq
	89, // 52: sysclient.SysLogService.SysLogDelete:input_type -> sysclient.SysLogDeleteReq
	91, // 53: sysclient.JobService.JobAdd:input_type -> sysclient.JobAddReq
	93, // 54: sysclient.JobService.JobList:input_type -> sysclient.JobListReq
	96, // 55: sysclient.JobService.JobUpdate:input_type -> sysclient.JobUpdateReq
	98, // 56: sysclient.JobService.JobDelete:input_type -> sysclient.JobDeleteReq
	1,  // 57: sysclient.UserService.Login:output_type -> sysclient.loginResp
	3,  // 58: sysclient.UserService.UserInfo:output_type -> sysclient.InfoResp
	5,  // 59: sysclient.UserService.UserAdd:output_type -> sysclient.UserAddResp
	8,  // 60: sysclient.UserService.UserList:output_type -> sysclient.UserListResp
	10, // 61: sysclient.UserService.UserUpdate:output_type -> sysclient.UserUpdateResp
	12, // 62: sysclient.UserService.UserDelete:output_type -> sysclient.UserDeleteResp
	14, // 63: sysclient.UserService.ReSetPassword:output_type -> sysclient.ReSetPasswordResp
	16, // 64: sysclient.UserService.UpdateUserStatus:output_type -> sysclient.UserStatusResp
	20, // 65: sysclient.UserService.QueryUserRoleList:output_type -> sysclient.QueryUserRoleListResp
	18, // 66: sysclient.UserService.UpdateUserRoleList:output_type -> sysclient.UpdateUserRoleListResp
	22, // 67: sysclient.RoleService.RoleAdd:output_type -> sysclient.RoleAddResp
	25, // 68: sysclient.RoleService.RoleList:output_type -> sysclient.RoleListResp
	27, // 69: sysclient.RoleService.RoleUpdate:output_type -> sysclient.RoleUpdateResp
	29, // 70: sysclient.RoleService.RoleDelete:output_type -> sysclient.RoleDeleteResp
	31, // 71: sysclient.RoleService.QueryRoleMenuList:output_type -> sysclient.QueryRoleMenuListResp
	43, // 72: sysclient.RoleService.UpdateMenuRoleList:output_type -> sysclient.UpdateMenuRoleResp
	33, // 73: sysclient.MenuService.MenuAdd:output_type -> sysclient.MenuAddResp
	37, // 74: sysclient.MenuService.MenuList:output_type -> sysclient.MenuListResp
	39, // 75: sysclient.MenuService.MenuUpdate:output_type -> sysclient.MenuUpdateResp
	41, // 76: sysclient.MenuService.MenuDelete:output_type -> sysclient.MenuDeleteResp
	45, // 77: sysclient.DictService.AddDict:output_type -> sysclient.DictAddResp
	47, // 78: sysclient.DictService.DeleteDict:output_type -> sysclient.DictDeleteResp
	49, // 79: sysclient.DictService.UpdateDict:output_type -> sysclient.DictUpdateResp
	51, // 80: sysclient.DictService.QueryDict:output_type -> sysclient.DictResp
	54, // 81: sysclient.DictService.QueryDictList:output_type -> sysclient.DictListResp
	56, // 82: sysclient.DictItemService.AddDictItem:output_type -> sysclient.DictItemAddResp
	58, // 83: sysclient.DictItemService.DeleteDictItem:output_type -> sysclient.DictItemDeleteResp
	60, // 84: sysclient.DictItemService.UpdateDictItem:output_type -> sysclient.DictItemUpdateResp
	62, // 85: sysclient.DictItemService.QueryDictItem:output_type -> sysclient.DictItemResp
	65, // 86: sysclient.DictItemService.QueryDictItemList:output_type -> sysclient.DictItemListResp
	67, // 87: sysclient.DeptService.DeptAdd:output_type -> sysclient.DeptAddResp
	70, // 88: sysclient.DeptService.DeptList:output_type -> sysclient.DeptListResp
	72, // 89: sysclient.DeptService.DeptUpdate:output_type -> sysclient.DeptUpdateResp
	74, // 90: sysclient.DeptService.DeptDelete:output_type -> sysclient.DeptDeleteResp
	76, // 91: sysclient.LoginLogService.LoginLogAdd:output_type -> sysclient.LoginLogAddResp
	79, // 92: sysclient.LoginLogService.LoginLogList:output_type -> sysclient.LoginLogListResp
	81, // 93: sysclient.LoginLogService.LoginLogDelete:output_type -> sysclient.LoginLogDeleteResp
	83, // 94: sysclient.LoginLogService.StatisticsLoginLog:output_type -> sysclient.StatisticsLoginLogResp
	85, // 95: sysclient.SysLogService.SysLogAdd:output_type -> sysclient.SysLogAddResp
	88, // 96: sysclient.SysLogService.SysLogList:output_type -> sysclient.SysLogListResp
	90, // 97: sysclient.SysLogService.SysLogDelete:output_type -> sysclient.SysLogDeleteResp
	92, // 98: sysclient.JobService.JobAdd:output_type -> sysclient.JobAddResp
	95, // 99: sysclient.JobService.JobList:output_type -> sysclient.JobListResp
	97, // 100: sysclient.JobService.JobUpdate:output_type -> sysclient.JobUpdateResp
	99, // 101: sysclient.JobService.JobDelete:output_type -> sysclient.JobDeleteResp
	57, // [57:102] is the sub-list for method output_type
	12, // [12:57] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_rpc_sys_sys_proto_init() }
func file_rpc_sys_sys_proto_init() {
	if File_rpc_sys_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_sys_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReSetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReSetPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItemListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsLoginLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLogDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_sys_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   100,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_rpc_sys_sys_proto_goTypes,
		DependencyIndexes: file_rpc_sys_sys_proto_depIdxs,
		MessageInfos:      file_rpc_sys_sys_proto_msgTypes,
	}.Build()
	File_rpc_sys_sys_proto = out.File
	file_rpc_sys_sys_proto_rawDesc = nil
	file_rpc_sys_sys_proto_goTypes = nil
	file_rpc_sys_sys_proto_depIdxs = nil
}
